// Structs in Go
// Data structure: Collection of properties that are related together.
// In the above example, we can see that as new requirements come up
// then we would need to add more properties for certain kind of operations
// eg. playing pocker or black-jack or some other game.

// Go initializes with zero values
// Eg. string ""
// int 0
// float 0
// bool false

// Pass by Value
// Go is a pass by value language. That is by default for all cases, a new
// copy is created when we pass it into a function.

// Pointer Operations
// &variable ==> Give me the memory adress of the value this variable is pointing at
// *pointer ==> Give me the value this memory address is pointing at
// *type ==> This a variable that is a pointer to a specific type.