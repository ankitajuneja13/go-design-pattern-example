* It is applicable when there are multiple candidates to process the same request.
* When you don't want the client to choose the receiver as multiple objects can handle the request.
* The client only needs to know the first element in the chain(eg. reception).

* Ever incoming request is passed to the chain and each of the handler:
1. Processes the request or skips the processing.
2. Decides whether to pass the request to the next handler in the chain or not.

UML Diagram:
* handler interface requires to implement some methods like setNext(), execute/processRequest() by each of 
the concrete handler.
* we assign the next for each in a helper function.
* the client just calls the reception handler.